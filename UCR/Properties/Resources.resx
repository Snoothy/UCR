<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon_x32" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9vb04vb29/729vUC9vb3Lvb29rL29vWC9vb3/vb29GL29
        vfO9vb2Evb29hL29vfO9vb0Yvb29/729vWC9vb2svb29y729vUC9vb3/vb29OAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL29vTi9vb3/vb29QL29vcu9vb2svb29YL29
        vf+9vb0Yvb298729vYS9vb2Evb298729vRi9vb3/vb29YL29vay9vb3Lvb29QL29vf+9vb04AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvb29OL29vf+9vb1Avb29y729
        vay9vb1gvb29/729vRi9vb3zvb29hL29vYS9vb3zvb29GL29vf+9vb1gvb29rL29vcu9vb1Avb29/729
        vTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGVlYwqioqFOtLS08aSk
        pFSysrLHsbGxraqqqm+0tLTxkpKSNLS0tOiurq6Mrq6ujLS0tOiSkpI0tLS08aqqqm+xsbGtsrKyx6Sk
        pFS0tLTxoqKhTmVlYwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeXl0QWlpYzGVl
        Y/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2ho
        Z/9oaGf/aGhn/2hoZ/9lZWP/WlpYzF5eXRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZWVjClpa
        WMxYWFb/R0dG/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0dHRv9YWFb/WlpYzGVlYwoAAAAAAAAAAAAAAAC9vb04vb29OL29
        vTiioqFOZWVj/0dHRv9aWln/a2tq/1tbWv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0dHRv9lZWP/oqKhTr29vTi9vb04vb29OL29
        vf+9vb3/vb29/7S0tPFoaGf/Q0NC/2trav9ubm3/bGxr/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/2hoZ/+0tLTxvb29/729
        vf+9vb3/vb29QL29vUC9vb1ApKSkVGhoZ/9DQ0L/W1ta/2xsa/9cXFv/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/aGhn/6Sk
        pFS9vb1Avb29QL29vUC9vb3Lvb29y729vcuysrLHaGhn/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9oaGf/srKyx729vcu9vb3Lvb29y729vay9vb2svb29rLGxsa1oaGf/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/2hoZ/+xsbGtvb29rL29vay9vb2svb29YL29vWC9vb1gqqqqb2hoZ/9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/aGhn/6qqqm+9vb1gvb29YL29vWC9vb3/vb29/729vf+0tLTxaGhn/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9oaGf/tLS08b29vf+9vb3/vb29/729vRi9vb0Yvb29GJKS
        kjRoaGf/Q0NC/0NDQv9DQ0L/l5eX/9nY2P/h4OD/0dDQ/3h4d/9DQ0L/j4+O/9TT0//b29v/29vb/4eG
        hv/Hxsb/kZGQ/0NDQv9ycnH/2trZ/2lpaP9DQ0L/Q0NC/2hoZ/+SkpI0vb29GL29vRi9vb0Yvb298729
        vfO9vb3ztLS06GhoZ/9DQ0L/Q0NC/0xMS//v7u7/oqGh/1VVVP/FxMT/1dTU/2ZlZf/v7u7/ra2s/3l4
        eP94d3f/VlZV/9vb2/+fn57/Q0NC/8/Ozv/DwsL/Q0NC/0NDQv9DQ0L/aGhn/7S0tOi9vb3zvb298729
        vfO9vb2Evb29hL29vYSurq6MaGhn/0NDQv9DQ0L/XFxb//Py8v9fX17/Q0NC/5uamv/f3t7/lpaV//Dv
        7/9FRUT/Q0NC/0NDQv9DQ0L/29vb/9LS0v/DwsL/8/Ly/4yMi/9DQ0L/Q0NC/0NDQv9oaGf/rq6ujL29
        vYS9vb2Evb29hL29vYS9vb2Evb29hK6uroxoaGf/Q0NC/0NDQv9eXl3/8/Ly/15eXf9DQ0L/mpmZ/+Df
        3/+VlJT/8fDw/0dHRv9DQ0L/Q0NC/0NDQv/b29v/x8bG/6moqP/BwcH/7ezs/05OTf9DQ0L/Q0NC/2ho
        Z/+urq6Mvb29hL29vYS9vb2Evb298729vfO9vb3ztLS06GhoZ/9DQ0L/Q0NC/15eXf/z8vL/Xl5d/0ND
        Qv+amZn/4N/f/2VlZf/w7+//qqqq/19fXv9eXl3/TExL/9vb2/+qqqr/aGho/5WVlf/z8vL/WFhX/0ND
        Qv9DQ0L/aGhn/7S0tOi9vb3zvb298729vfO9vb0Yvb29GL29vRiSkpI0aGhn/0NDQv9DQ0L/Wlpa/+Hg
        4P9aWlr/Q0NC/5CPj//Pz87/Q0NC/5aVlf/Z2Nj/4eDg/+Hg4P+KiYn/zMvL/+Hg4P/h4OD/397e/7Oz
        s/9DQ0L/Q0NC/0NDQv9oaGf/kpKSNL29vRi9vb0Yvb29GL29vf+9vb3/vb29/7S0tPFoaGf/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/2hoZ/+0tLTxvb29/729vf+9vb3/vb29YL29vWC9vb1gqqqqb2ho
        Z/9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/aGhn/6qqqm+9vb1gvb29YL29vWC9vb2svb29rL29
        vayxsbGtaGhn/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9oaGf/sbGxrb29vay9vb2svb29rL29
        vcu9vb3Lvb29y7KyssdoaGf/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/2hoZ/+ysrLHvb29y729
        vcu9vb3Lvb29QL29vUC9vb1ApKSkVGhoZ/9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/aGhn/6Sk
        pFS9vb1Avb29QL29vUC9vb3/vb29/729vf+0tLTxaGhn/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9oaGf/tLS08b29vf+9vb3/vb29/729vTi9vb04vb29OKKioU5lZWP/R0dG/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/R0dG/2VlY/+ioqFOvb29OL29vTi9vb04AAAAAAAAAAAAAAAAZWVjClpaWMxYWFb/R0dG/0ND
        Qv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0NDQv9DQ0L/Q0NC/0ND
        Qv9DQ0L/Q0NC/0dHRv9YWFb/WlpYzGVlYwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXl5dEFpa
        WMxlZWP/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2hoZ/9oaGf/aGhn/2ho
        Z/9oaGf/aGhn/2hoZ/9oaGf/ZWVj/1paWMxeXl0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZWVjCqKioU60tLTxpKSkVLKyssexsbGtqqqqb7S0tPGSkpI0tLS06K6uroyurq6MtLS06JKS
        kjS0tLTxqqqqb7Gxsa2ysrLHpKSkVLS0tPGioqFOZWVjCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvb29OL29vf+9vb1Avb29y729vay9vb1gvb29/729vRi9vb3zvb29hL29
        vYS9vb3zvb29GL29vf+9vb1gvb29rL29vcu9vb1Avb29/729vTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9vb04vb29/729vUC9vb3Lvb29rL29vWC9vb3/vb29GL29
        vfO9vb2Evb29hL29vfO9vb0Yvb29/729vWC9vb2svb29y729vUC9vb3/vb29OAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL29vTi9vb3/vb29QL29vcu9vb2svb29YL29
        vf+9vb0Yvb298729vYS9vb2Evb298729vRi9vb3/vb29YL29vay9vb3Lvb29QL29vf+9vb04AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/wAAD/8AAA/+AAAH/AAAA/gAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADgAAAH8AAAD/gAAB/8AAA//AAAP/wAAD8=
</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ucr" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>